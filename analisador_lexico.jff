<?xml version="1.0" encoding="UTF-8" standalone="no"?><!--Created with JFLAP 7.1.--><structure>
	<type>moore</type>
	<automaton>
		<!--The list of states.-->
		<state id="0" name="q0">
			<x>191.0</x>
			<y>874.0</y>
			<initial/>
			<output/>
		</state>
		<state id="1" name="q1">
			<x>957.0</x>
			<y>101.0</y>
			<output/>
		</state>
		<state id="2" name="q2">
			<x>1230.0</x>
			<y>101.0</y>
			<output>retornar(busca_tabela(cadeia)); retroceder()</output>
		</state>
		<state id="3" name="q3">
			<x>954.0</x>
			<y>208.0</y>
			<output/>
		</state>
		<state id="4" name="q4">
			<x>1230.0</x>
			<y>209.0</y>
			<output>retornar(':=', simb_atrib)</output>
		</state>
		<state id="5" name="q5">
			<x>1232.0</x>
			<y>307.0</y>
			<output>retornar(':', simb_dp); retroceder()</output>
		</state>
		<state id="6" name="q6">
			<x>958.0</x>
			<y>389.0</y>
			<output/>
		</state>
		<state id="7" name="q7">
			<x>1230.0</x>
			<y>389.0</y>
			<output>retornar('&lt;=', simb_menor_igual)</output>
		</state>
		<state id="8" name="q8">
			<x>1230.0</x>
			<y>458.0</y>
			<output>retornar('&lt;&gt;', simb_dif)</output>
		</state>
		<state id="9" name="q9">
			<x>1231.0</x>
			<y>528.0</y>
			<output>retornar('&lt;', simb_menor); retroceder()</output>
		</state>
		<state id="10" name="q10">
			<x>963.0</x>
			<y>580.0</y>
			<output>retornar('=', simb_igual)</output>
		</state>
		<state id="11" name="q11">
			<x>959.0</x>
			<y>692.0</y>
			<output/>
		</state>
		<state id="12" name="q12">
			<x>1236.0</x>
			<y>693.0</y>
			<output>retornar('&gt;=', simb_maior_igual)</output>
		</state>
		<state id="13" name="q13">
			<x>1234.0</x>
			<y>817.0</y>
			<output>retornar('&gt;', simb_maior); retroceder()</output>
		</state>
		<state id="14" name="q14">
			<x>954.0</x>
			<y>1276.0</y>
			<output>retornar(';', simb_pv)</output>
		</state>
		<state id="15" name="q15">
			<x>962.0</x>
			<y>930.0</y>
			<output/>
		</state>
		<state id="16" name="q16">
			<x>964.0</x>
			<y>1044.0</y>
			<output>retornar(cadeia, num_int); retroceder()</output>
		</state>
		<state id="17" name="q17">
			<x>1310.0</x>
			<y>929.0</y>
			<output/>
		</state>
		<state id="18" name="q18">
			<x>1645.0</x>
			<y>918.0</y>
			<output/>
		</state>
		<state id="19" name="q19">
			<x>1646.0</x>
			<y>1042.0</y>
			<output>retornar(cadeia, num_real); retroceder()</output>
		</state>
		<state id="20" name="q20">
			<x>963.0</x>
			<y>1164.0</y>
			<output/>
		</state>
		<state id="21" name="q21">
			<x>1307.0</x>
			<y>1167.0</y>
			<output>retornar(cadeia, comentario)</output>
		</state>
		<state id="22" name="q22">
			<x>954.0</x>
			<y>1370.0</y>
			<output>retornar('(', simb_apar)</output>
		</state>
		<state id="23" name="q23">
			<x>957.0</x>
			<y>1457.0</y>
			<output>retornar(')', simb_fpar)</output>
		</state>
		<state id="24" name="q24">
			<x>957.0</x>
			<y>1547.0</y>
			<output>retornar('+', simb_mais)</output>
		</state>
		<state id="25" name="q25">
			<x>955.0</x>
			<y>1640.0</y>
			<output>retornar('-', simb_menos)</output>
		</state>
		<state id="26" name="q26">
			<x>944.0</x>
			<y>1881.0</y>
			<output>retornar('.', simb_p)</output>
		</state>
		<state id="27" name="q27">
			<x>947.0</x>
			<y>1714.0</y>
			<output>retornar('*', simb_mult)</output>
		</state>
		<state id="28" name="q28">
			<x>948.0</x>
			<y>1792.0</y>
			<output>retornar('/', simb_div)</output>
		</state>
		<state id="29" name="q29">
			<x>950.0</x>
			<y>2062.0</y>
			<output>retornar(erro("Caractere não permitido"))</output>
		</state>
		<state id="30" name="q30">
			<x>1311.0</x>
			<y>1045.0</y>
			<output>retornar(erro("Número real mal formado"))</output>
		</state>
		<state id="31" name="q31">
			<x>1307.0</x>
			<y>1260.0</y>
			<output>retornar(erro("Comentário não finalizado"))</output>
		</state>
		<state id="32" name="q32">
			<x>946.0</x>
			<y>1970.0</y>
			<output>retornar(',', simb_virg)</output>
		</state>
		<!--The list of transitions.-->
		<transition>
			<from>18</from>
			<to>18</to>
			<read>0...9</read>
			<transout/>
		</transition>
		<transition>
			<from>15</from>
			<to>15</to>
			<read>0...9</read>
			<transout/>
		</transition>
		<transition>
			<from>6</from>
			<to>8</to>
			<read>&gt;</read>
			<transout>retornar('&lt;&gt;', simb_dif)</transout>
		</transition>
		<transition>
			<from>0</from>
			<to>20</to>
			<read>{</read>
			<transout/>
		</transition>
		<transition>
			<from>0</from>
			<to>22</to>
			<read>(</read>
			<transout>retornar('(', simb_apar)</transout>
		</transition>
		<transition>
			<from>15</from>
			<to>17</to>
			<read>.</read>
			<transout/>
		</transition>
		<transition>
			<from>0</from>
			<to>10</to>
			<read>=</read>
			<transout>retornar('=', simb_igual)</transout>
		</transition>
		<transition>
			<from>11</from>
			<to>13</to>
			<read>outro</read>
			<transout>retornar('&gt;', simb_maior); retroceder()</transout>
		</transition>
		<transition>
			<from>0</from>
			<to>14</to>
			<read>;</read>
			<transout>retornar(';', simb_pv)</transout>
		</transition>
		<transition>
			<from>6</from>
			<to>7</to>
			<read>=</read>
			<transout>retornar('&lt;=', simb_menor_igual)</transout>
		</transition>
		<transition>
			<from>11</from>
			<to>12</to>
			<read>=</read>
			<transout>retornar('&gt;=', simb_maior_igual)</transout>
		</transition>
		<transition>
			<from>1</from>
			<to>1</to>
			<read>letra | dígito</read>
			<transout/>
		</transition>
		<transition>
			<from>17</from>
			<to>30</to>
			<read>outro</read>
			<transout>retornar(erro("Número real mal formado"))</transout>
		</transition>
		<transition>
			<from>17</from>
			<to>18</to>
			<read>0...9</read>
			<transout/>
		</transition>
		<transition>
			<from>0</from>
			<to>0</to>
			<read>'' | \t | \n</read>
			<transout/>
		</transition>
		<transition>
			<from>20</from>
			<to>20</to>
			<read>outro</read>
			<transout/>
		</transition>
		<transition>
			<from>0</from>
			<to>32</to>
			<read>,</read>
			<transout>retornar(',', simb_virg)</transout>
		</transition>
		<transition>
			<from>20</from>
			<to>21</to>
			<read>}</read>
			<transout>retornar(cadeia, comentario)</transout>
		</transition>
		<transition>
			<from>0</from>
			<to>28</to>
			<read>/</read>
			<transout>retornar('/', simb_div)</transout>
		</transition>
		<transition>
			<from>0</from>
			<to>1</to>
			<read>letra</read>
			<transout/>
		</transition>
		<transition>
			<from>1</from>
			<to>2</to>
			<read>outro</read>
			<transout>retornar(busca_tabela(cadeia)); retroceder()</transout>
		</transition>
		<transition>
			<from>3</from>
			<to>4</to>
			<read>=</read>
			<transout>retornar(':=', simb_atrib)</transout>
		</transition>
		<transition>
			<from>15</from>
			<to>16</to>
			<read>outro</read>
			<transout>retornar(cadeia, num_int); retroceder()</transout>
		</transition>
		<transition>
			<from>3</from>
			<to>5</to>
			<read>outro</read>
			<transout>retornar(':', simb_dp); retroceder()</transout>
		</transition>
		<transition>
			<from>0</from>
			<to>11</to>
			<read>&gt;</read>
			<transout/>
		</transition>
		<transition>
			<from>0</from>
			<to>27</to>
			<read>*</read>
			<transout>retornar('*', simb_mult)</transout>
		</transition>
		<transition>
			<from>0</from>
			<to>26</to>
			<read>.</read>
			<transout>retornar('.', simb_p)</transout>
		</transition>
		<transition>
			<from>0</from>
			<to>15</to>
			<read>0...9</read>
			<transout/>
		</transition>
		<transition>
			<from>0</from>
			<to>29</to>
			<read>outro</read>
			<transout>retornar(erro("Caractere não permitido"))</transout>
		</transition>
		<transition>
			<from>0</from>
			<to>3</to>
			<read>:</read>
			<transout/>
		</transition>
		<transition>
			<from>0</from>
			<to>6</to>
			<read>&lt;</read>
			<transout/>
		</transition>
		<transition>
			<from>0</from>
			<to>23</to>
			<read>)</read>
			<transout>retornar(')', simb_fpar)</transout>
		</transition>
		<transition>
			<from>0</from>
			<to>24</to>
			<read>+</read>
			<transout>retornar('+', simb_mais)</transout>
		</transition>
		<transition>
			<from>0</from>
			<to>25</to>
			<read>-</read>
			<transout>retornar('-', simb_menos)</transout>
		</transition>
		<transition>
			<from>6</from>
			<to>9</to>
			<read>outro</read>
			<transout>retornar('&lt;', simb_menor); retroceder()</transout>
		</transition>
		<transition>
			<from>18</from>
			<to>19</to>
			<read>outro</read>
			<transout>retornar(cadeia, num_real); retroceder()</transout>
		</transition>
		<transition>
			<from>20</from>
			<to>31</to>
			<read>EOF</read>
			<transout>retornar(erro("Comentário não finalizado"))</transout>
		</transition>
	</automaton>
</structure>